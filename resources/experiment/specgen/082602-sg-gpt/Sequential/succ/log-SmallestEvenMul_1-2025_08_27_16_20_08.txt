public class SmallestEvenMul_Mutant1 {

    //@ requires n != Integer.MIN_VALUE;
    //@ ensures \result % 2 == 0 && (\result == n || \result == 2*n);
    public static int smallestEvenMultiple(int n) {
        return n % 2 != 0 ? n : 2 * n;
    }
}
==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/SmallestEvenMul_Mutant1.java:6: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/SmallestEvenMul_Mutant1.java:4:) in method smallestEvenMultiple
        return n % 2 != 0 ? n : 2 * n;
        ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/SmallestEvenMul_Mutant1.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/SmallestEvenMul_Mutant1.java:6:
    //@ ensures \result % 2 == 0 && (\result == n || \result == 2*n);
        ^
2 verification failures

==============================
public class SmallestEvenMul_Mutant1 {

    //@ requires n != Integer.MIN_VALUE;
    //@ ensures \result % 2 == 0 && (\result == n || \result == 2*n);  
    public static int smallestEvenMultiple(int n) {
        return n % 2 != 0 ? n : 2 * n;
    }
}

==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/SmallestEvenMul_Mutant1.java:6: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/SmallestEvenMul_Mutant1.java:4:) in method smallestEvenMultiple
        return n % 2 != 0 ? n : 2 * n;
        ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/SmallestEvenMul_Mutant1.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/SmallestEvenMul_Mutant1.java:6:
    //@ ensures \result % 2 == 0 && (\result == n || \result == 2*n);  
        ^
2 verification failures

==============================
public class SmallestEvenMul_Mutant1 {

    //@ requires n != Integer.MIN_VALUE;
 
    public static int smallestEvenMultiple(int n) {
        return n % 2 != 0 ? n : 2 * n;
    }
}

==============================

==============================
