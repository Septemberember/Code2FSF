public class IsCommonMultipleBranch_Mutant4 {
    //@ requires a != 0 && b != 0;
    //@ ensures \result <==> (m % a != 0 && m % b == 0);
    public static /*@ pure @*/ boolean isCommonMultiple(int a, int b, int m) {
        if (m % a != 0) {
            return false;
        }
        if (m % b != 0) {
            return true;
        }
        return true;
    }
}
==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/IsCommonMultipleBranch_Mutant4.java:6: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/IsCommonMultipleBranch_Mutant4.java:3:) in method isCommonMultiple
            return false;
            ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/IsCommonMultipleBranch_Mutant4.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/IsCommonMultipleBranch_Mutant4.java:6:
    //@ ensures \result <==> (m % a != 0 && m % b == 0);
        ^
2 verification failures

==============================
public class IsCommonMultipleBranch_Mutant4 {
    //@ requires a != 0 && b != 0;
    //@ ensures \result <==> (m % a != 0 && m % b == 0);  
    public static /*@ pure @*/ boolean isCommonMultiple(int a, int b, int m) {
        if (m % a != 0) {
            return false;
        }
        if (m % b != 0) {
            return true;
        }
        return true;
    }
}

==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/IsCommonMultipleBranch_Mutant4.java:6: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/IsCommonMultipleBranch_Mutant4.java:3:) in method isCommonMultiple
            return false;
            ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/IsCommonMultipleBranch_Mutant4.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/IsCommonMultipleBranch_Mutant4.java:6:
    //@ ensures \result <==> (m % a != 0 && m % b == 0);  
        ^
2 verification failures

==============================
public class IsCommonMultipleBranch_Mutant4 {
    //@ requires a != 0 && b != 0;
 
    public static /*@ pure @*/ boolean isCommonMultiple(int a, int b, int m) {
        if (m % a != 0) {
            return false;
        }
        if (m % b != 0) {
            return true;
        }
        return true;
    }
}

==============================

==============================
