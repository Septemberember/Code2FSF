public class WindCompensation_Mutant4 {
    //@ requires windSpeed >= 0;
    //@ ensures \result >= 0;
    //@ ensures windSpeed <= 20 ==> \result == windSpeed - 10;
    //@ ensures windSpeed > 20 ==> \result == (windSpeed - 20) * 2;
    public static int windCompensation(int windSpeed) {
        int compensation = 0;
        if (windSpeed > 20) {
            compensation = (windSpeed - 20) * 2;
        } else if (windSpeed >= 10) {
            compensation = windSpeed - 10;
        }
        return compensation;
    }
}
==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4:) in method windCompensation
        return compensation;
        ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13:
    //@ ensures windSpeed <= 20 ==> \result == windSpeed - 10;
        ^
2 verification failures

==============================
public class WindCompensation_Mutant4 {
    //@ requires windSpeed >= 0;
    //@ ensures \result >= 0;
    //@ ensures windSpeed < 20 ==> \result == windSpeed - 10;  
    //@ ensures windSpeed > 20 ==> \result == (windSpeed - 20) * 2;
    public static int windCompensation(int windSpeed) {
        int compensation = 0;
        if (windSpeed > 20) {
            compensation = (windSpeed - 20) * 2;
        } else if (windSpeed >= 10) {
            compensation = windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4:) in method windCompensation
        return compensation;
        ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13:
    //@ ensures windSpeed < 20 ==> \result == windSpeed - 10;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant4 {
    //@ requires windSpeed >= 0;
    //@ ensures \result >= 0;
    //@ ensures windSpeed <= 20 ==> \result == windSpeed - 10;  
    //@ ensures windSpeed > 20 ==> \result == (windSpeed - 20) * 2;
    public static int windCompensation(int windSpeed) {
        int compensation = 0;
        if (windSpeed > 20) {
            compensation = (windSpeed - 20) * 2;
        } else if (windSpeed >= 10) {
            compensation = windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4:) in method windCompensation
        return compensation;
        ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13:
    //@ ensures windSpeed <= 20 ==> \result == windSpeed - 10;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant4 {
    //@ requires windSpeed >= 0;
    //@ ensures \result >= 0;
    //@ ensures windSpeed - 1 <= 20 ==> \result == windSpeed - 10;  
    //@ ensures windSpeed > 20 ==> \result == (windSpeed - 20) * 2;
    public static int windCompensation(int windSpeed) {
        int compensation = 0;
        if (windSpeed > 20) {
            compensation = (windSpeed - 20) * 2;
        } else if (windSpeed >= 10) {
            compensation = windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4:) in method windCompensation
        return compensation;
        ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13:
    //@ ensures windSpeed - 1 <= 20 ==> \result == windSpeed - 10;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant4 {
    //@ requires windSpeed >= 0;
    //@ ensures \result >= 0;
    //@ ensures windSpeed < 20 ==> \result == windSpeed + 10;  
    //@ ensures windSpeed > 20 ==> \result == (windSpeed - 20) * 2;
    public static int windCompensation(int windSpeed) {
        int compensation = 0;
        if (windSpeed > 20) {
            compensation = (windSpeed - 20) * 2;
        } else if (windSpeed >= 10) {
            compensation = windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4:) in method windCompensation
        return compensation;
        ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13:
    //@ ensures windSpeed < 20 ==> \result == windSpeed + 10;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant4 {
    //@ requires windSpeed >= 0;
    //@ ensures \result >= 0;
    //@ ensures windSpeed <= 20 ==> \result == windSpeed + 10;  
    //@ ensures windSpeed > 20 ==> \result == (windSpeed - 20) * 2;
    public static int windCompensation(int windSpeed) {
        int compensation = 0;
        if (windSpeed > 20) {
            compensation = (windSpeed - 20) * 2;
        } else if (windSpeed >= 10) {
            compensation = windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4:) in method windCompensation
        return compensation;
        ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13:
    //@ ensures windSpeed <= 20 ==> \result == windSpeed + 10;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant4 {
    //@ requires windSpeed >= 0;
    //@ ensures \result >= 0;
    //@ ensures windSpeed - 1 <= 20 ==> \result == windSpeed + 10;  
    //@ ensures windSpeed > 20 ==> \result == (windSpeed - 20) * 2;
    public static int windCompensation(int windSpeed) {
        int compensation = 0;
        if (windSpeed > 20) {
            compensation = (windSpeed - 20) * 2;
        } else if (windSpeed >= 10) {
            compensation = windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4:) in method windCompensation
        return compensation;
        ^
/root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082602-gpt-specgen/tmp/WindCompensation_Mutant4.java:13:
    //@ ensures windSpeed - 1 <= 20 ==> \result == windSpeed + 10;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant4 {
    //@ requires windSpeed >= 0;
    //@ ensures \result >= 0;
 
    //@ ensures windSpeed > 20 ==> \result == (windSpeed - 20) * 2;
    public static int windCompensation(int windSpeed) {
        int compensation = 0;
        if (windSpeed > 20) {
            compensation = (windSpeed - 20) * 2;
        } else if (windSpeed >= 10) {
            compensation = windSpeed - 10;
        }
        return compensation;
    }
}

==============================

==============================
