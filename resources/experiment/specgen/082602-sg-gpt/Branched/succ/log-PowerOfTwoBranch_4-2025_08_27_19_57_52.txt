public class PowerOfTwoBranch_Mutant4 {

    //@ ensures \result <==> n > 0 && (\exists int i; i >= 0; n == (int)Math.pow(2, i));
    public static boolean isPowerOfTwo(int n) {
        if (n <= 0) {
            return false;
        }
        if ((n & (n - 1)) != 0) {
            return true;
        }
        return true;
    }
}
==============================
error: An error while executing a proof script for isPowerOfTwo: (error "expecting bit-vector terms")
1 error

==============================
public class PowerOfTwoBranch_Mutant4 {

    //@ ensures \result <==> n > 0 && (\exists int i; i >= 0; n == (int)Math.pow(2, i));
    public static boolean isPowerOfTwo(int n) {
        if (n <= 0) {
            return false;
        }
        if ((n & (n - 1)) != 0) {
            return false;
        }
        return true;
    }
}
==============================
error: An error while executing a proof script for isPowerOfTwo: (error "expecting bit-vector terms")
1 error

==============================
public class PowerOfTwoBranch_Mutant4 {

    //@ ensures \result <==> n > 0 && (\exists int i; i >= 0; n == (int)Math.pow(2, i));
    public static boolean isPowerOfTwo(int n) {
        if (n <= 0) {
            return false;
        }
        if ((n & (n - 1)) != 0) {
            return false;
        }
        return true;
    }
}
==============================
error: An error while executing a proof script for isPowerOfTwo: (error "expecting bit-vector terms")
1 error

==============================
public class PowerOfTwoBranch_Mutant4 {

    //@ ensures \result <==> n > 0 && (n & (n - 1)) == 0;
    public static boolean isPowerOfTwo(int n) {
        if (n <= 0) {
            return false;
        }
        if ((n & (n - 1)) != 0) {
            return false;
        }
        return true;
    }
}
==============================

==============================
