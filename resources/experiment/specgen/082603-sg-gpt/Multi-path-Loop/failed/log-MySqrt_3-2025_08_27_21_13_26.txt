public class MySqrt_Mutant3 {
    //@ ensures \result * \result <= x && ((\result + 1) * (\result + 1) > x || \result == Integer.MAX_VALUE);
    public static int mySqrt(int x) {
        int l = 0, r = x, ans = 0;
        //@ maintaining l <= r;
        //@ maintaining (\forall int i; 0 <= i && i < l; i * i <= x);
        //@ maintaining (\forall int i; r < i && i <= x; i * i > x);
        //@ decreases r - l;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}
==============================
