public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed > 10 && windSpeed <= 20;
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}
==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed > 10 && windSpeed <= 20;
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed > 10 && windSpeed < 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed > 10 && windSpeed < 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed > 10 && windSpeed <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed > 10 && windSpeed <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed > 10 && windSpeed - 1 <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed > 10 && windSpeed - 1 <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed >= 10 && windSpeed < 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed >= 10 && windSpeed < 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed >= 10 && windSpeed <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed >= 10 && windSpeed <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed >= 10 && windSpeed - 1 <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed - 10) <==> windSpeed >= 10 && windSpeed - 1 <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed > 10 && windSpeed < 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed > 10 && windSpeed < 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed > 10 && windSpeed <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed > 10 && windSpeed <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed > 10 && windSpeed - 1 <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed > 10 && windSpeed - 1 <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed >= 10 && windSpeed < 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed >= 10 && windSpeed < 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed >= 10 && windSpeed <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed >= 10 && windSpeed <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed >= 10 && windSpeed - 1 <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 + (windSpeed + 10) <==> windSpeed >= 10 && windSpeed - 1 <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed > 10 && windSpeed < 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed > 10 && windSpeed < 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed > 10 && windSpeed <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed > 10 && windSpeed <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed > 10 && windSpeed - 1 <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed > 10 && windSpeed - 1 <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed >= 10 && windSpeed < 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed >= 10 && windSpeed < 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed >= 10 && windSpeed <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed >= 10 && windSpeed <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed >= 10 && windSpeed - 1 <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed + 10) <==> windSpeed >= 10 && windSpeed - 1 <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed > 10 && windSpeed < 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed > 10 && windSpeed < 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed > 10 && windSpeed <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed > 10 && windSpeed <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed > 10 && windSpeed - 1 <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed > 10 && windSpeed - 1 <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed >= 10 && windSpeed < 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed >= 10 && windSpeed < 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed >= 10 && windSpeed <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed >= 10 && windSpeed <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed >= 10 && windSpeed - 1 <= 20;  
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3:) in method windCompensation
        return compensation;
        ^
/root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/WindCompensation_Mutant5.java:12:
    //@ ensures \result == 5 - (windSpeed - 10) <==> windSpeed >= 10 && windSpeed - 1 <= 20;  
        ^
2 verification failures

==============================
public class WindCompensation_Mutant5 {
    //@ ensures \result == 5 <==> windSpeed <= 10;
 
    //@ ensures \result == 5 + (windSpeed - 20) * 2 <==> windSpeed > 20;
    public static int windCompensation(int windSpeed) {
        int compensation = 5;
        if (windSpeed > 20) {
            compensation += (windSpeed - 20) * 2;
        } else if (windSpeed > 10) {
            compensation += windSpeed - 10;
        }
        return compensation;
    }
}

==============================

==============================
