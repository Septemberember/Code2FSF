public class AltitudeController_Mutant5 {
    //@ ensures \result == 5 ==> controlSignal == -4;
    //@ ensures \result == 3 ==> controlSignal == -3;
    //@ ensures \result == 2 ==> controlSignal == -2;
    //@ ensures \result == 0 ==> controlSignal == error;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}
==============================
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:2: error: cannot find symbol
    //@ ensures \result == 5 ==> controlSignal == -4;
                                 ^
  symbol:   variable controlSignal
  location: class AltitudeController_Mutant5
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:3: error: cannot find symbol
    //@ ensures \result == 3 ==> controlSignal == -3;
                                 ^
  symbol:   variable controlSignal
  location: class AltitudeController_Mutant5
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:4: error: cannot find symbol
    //@ ensures \result == 2 ==> controlSignal == -2;
                                 ^
  symbol:   variable controlSignal
  location: class AltitudeController_Mutant5
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:5: error: cannot find symbol
    //@ ensures \result == 0 ==> controlSignal == error;
                                 ^
  symbol:   variable controlSignal
  location: class AltitudeController_Mutant5
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:5: error: cannot find symbol
    //@ ensures \result == 0 ==> controlSignal == error;
                                                  ^
  symbol:   variable error
  location: class AltitudeController_Mutant5
5 errors

==============================
public class AltitudeController_Mutant5 {
    //@ ensures \result == 5 ==> \result == -4;
    //@ ensures \result == 3 ==> \result == -3;
    //@ ensures \result == 2 ==> \result == -2;
    //@ ensures \result == 0 ==> \result == error;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}
==============================
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:5: error: cannot find symbol
    //@ ensures \result == 0 ==> \result == error;
                                            ^
  symbol:   variable error
  location: class AltitudeController_Mutant5
1 error

==============================
public class AltitudeController_Mutant5 {
    //@ ensures \result == 5 ==> \result == -4;
    //@ ensures \result == 3 ==> \result == -3;
    //@ ensures \result == 2 ==> \result == -2;
    //@ ensures \result == 0 ==> \result == \old(error);
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}
==============================
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:5: error: cannot find symbol
    //@ ensures \result == 0 ==> \result == \old(error);
                                                 ^
  symbol:   variable error
  location: class AltitudeController_Mutant5
1 error

==============================
public class AltitudeController_Mutant5 {
    //@ ensures \result == 5 ==> \result == -4;
    //@ ensures \result == 3 ==> \result == -3;
    //@ ensures \result == 2 ==> \result == -2;
    //@ ensures \result == 0 ==> \result == targetHeight - currentHeight;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}
==============================
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:2:) in method altitudeController
        return controlSignal;
        ^
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:2: verify: Associated declaration: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20:
    //@ ensures \result == 5 ==> \result == -4;
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
    //@ ensures \result == 5 ==> \result == -4;  
    //@ ensures \result == 3 ==> \result == -3;
    //@ ensures \result == 2 ==> \result == -2;
    //@ ensures \result == 0 ==> \result == targetHeight - currentHeight;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:2:) in method altitudeController
        return controlSignal;
        ^
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:2: verify: Associated declaration: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20:
    //@ ensures \result == 5 ==> \result == -4;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
 
    //@ ensures \result == 3 ==> \result == -3;
    //@ ensures \result == 2 ==> \result == -2;
    //@ ensures \result == 0 ==> \result == targetHeight - currentHeight;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:3:) in method altitudeController
        return controlSignal;
        ^
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20:
    //@ ensures \result == 3 ==> \result == -3;
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
 
    //@ ensures \result == 3 ==> \result == -3;  
    //@ ensures \result == 2 ==> \result == -2;
    //@ ensures \result == 0 ==> \result == targetHeight - currentHeight;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:3:) in method altitudeController
        return controlSignal;
        ^
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:3: verify: Associated declaration: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20:
    //@ ensures \result == 3 ==> \result == -3;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
 
 
    //@ ensures \result == 2 ==> \result == -2;
    //@ ensures \result == 0 ==> \result == targetHeight - currentHeight;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:4:) in method altitudeController
        return controlSignal;
        ^
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:4: verify: Associated declaration: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20:
    //@ ensures \result == 2 ==> \result == -2;
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
 
 
    //@ ensures \result == 2 ==> \result == -2;  
    //@ ensures \result == 0 ==> \result == targetHeight - currentHeight;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20: verify: The prover cannot establish an assertion (Postcondition: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:4:) in method altitudeController
        return controlSignal;
        ^
/root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:4: verify: Associated declaration: /root/082602-gpt-specgen/tmp/AltitudeController_Mutant5.java:20:
    //@ ensures \result == 2 ==> \result == -2;  
        ^
2 verification failures

==============================
public class AltitudeController_Mutant5 {
 
 
 
    //@ ensures \result == 0 ==> \result == targetHeight - currentHeight;
    public static int altitudeController(int currentHeight, int targetHeight) {
        int error = targetHeight - currentHeight;
        int absError = 0;
        absError = error < 0 ? -error : error;
        int controlSignal = 0;
        if (absError > 30) {
            controlSignal = error > 0 ? 5 : -4; //Changed -5 to -4
        } else if (absError > 20) {
            controlSignal = error > 0 ? 3 : -3;
        } else if (absError > 10) {
            controlSignal = error > 0 ? 2 : -2;
        } else {
            controlSignal = error;
        }
        return controlSignal;
    }
}

==============================

==============================
