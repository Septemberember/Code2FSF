public class Calculator_Mutant4 {
    //@ requires true;
    //@ ensures \result == spec_calculate(num1, num2, operator);
    public static /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 % num2; //mutated / with %
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }

    /*@ requires true;
        ensures \result == spec_calculate(num1, num2, operator);
    also
        requires operator == '+';
        ensures \result == num1 + num2;
    also
        requires operator == '-';
        ensures \result == num1 - num2;
    also
        requires operator == '*';
        ensures \result == num1 * num2;
    also
        requires operator == '/';
        ensures \result == num1 % num2;
    also
        requires operator == '%';
        ensures \result == num1 % num2;
    also
        requires operator != '+' && operator != '-' && operator != '*' && operator != '/' && operator != '%';
        ensures \result == -1;
    public model function static pure int spec_calculate(int num1, int num2, char operator) {
        switch(operator) {
            case '+':
                return num1 + num2;
            case '-':
                return num1 - num2;
            case '*':
                return num1 * num2;
            case '/':
                return num1 % num2;
            case '%':
                return num1 % num2;
            default:
                return -1;
        }
    }@*/
}
==============================
/root/082602-gpt-specgen/tmp/Calculator_Mutant4.java:48: error: <identifier> expected
    public model function static pure int spec_calculate(int num1, int num2, char operator) {
                         ^
/root/082602-gpt-specgen/tmp/Calculator_Mutant4.java:48: error: Method specs may not precede a variable declaration
    public model function static pure int spec_calculate(int num1, int num2, char operator) {
                          ^
2 errors

==============================
public class Calculator_Mutant4 {
    //@ requires true;
    //@ ensures \result == spec_calculate(num1, num2, operator);
    public static /*@ pure @*/ int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 % num2; //mutated / with %
                break;
            case '%':
                output = num1 % num2;
                break;
            default:
                return -1;
        }
        return output;
    }

    /*@ requires true;
        ensures \result == spec_calculate(num1, num2, operator);
    also
        requires operator == '+';
        ensures \result == num1 + num2;
    also
        requires operator == '-';
        ensures \result == num1 - num2;
    also
        requires operator == '*';
        ensures \result == num1 * num2;
    also
        requires operator == '/';
        ensures \result == num1 % num2;
    also
        requires operator == '%';
        ensures \result == num1 % num2;
    also
        requires operator != '+' && operator != '-' && operator != '*' && operator != '/' && operator != '%';
        ensures \result == -1;
    @*/
    public static /*@ pure @*/ int spec_calculate(int num1, int num2, char operator) {
        switch(operator) {
            case '+':
                return num1 + num2;
            case '-':
                return num1 - num2;
            case '*':
                return num1 * num2;
            case '/':
                return num1 % num2;
            case '%':
                return num1 % num2;
            default:
                return -1;
        }
    }
}
==============================
