public class Calculator_Mutant5 {
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 - num2;
    //@ ensures \result == num1 * num2;
    //@ ensures \result == num1 / num2;
    //@ ensures \result == num1 + num2; // mutated % with +
    //@ ensures \result == -1;
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}
==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:5: verify: The prover cannot establish an assertion (UndefinedDivideByZero) in method calculate
    //@ ensures \result == num1 / num2;
                                ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:29: verify: Associated method exit
        return output;
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 - num2;
    //@ ensures \result == num1 * num2;
    //@ ensures \result == num1 / num2;
    //@ ensures \result == num1 + num2; // mutated % with +
    //@ ensures \result == -1;
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}
==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:4:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 - num2;
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 - num2;  
    //@ ensures \result == num1 * num2;
    //@ ensures \result == num1 / num2;
    //@ ensures \result == num1 + num2; // mutated % with +
    //@ ensures \result == -1;
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:4:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 - num2;  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 + num2;  
    //@ ensures \result == num1 * num2;
    //@ ensures \result == num1 / num2;
    //@ ensures \result == num1 + num2; // mutated % with +
    //@ ensures \result == -1;
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:5:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:5: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 * num2;
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 + num2;  
    //@ ensures \result == num1 * num2;  
    //@ ensures \result == num1 / num2;
    //@ ensures \result == num1 + num2; // mutated % with +
    //@ ensures \result == -1;
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:5:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:5: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 * num2;  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 + num2;  
 
    //@ ensures \result == num1 / num2;
    //@ ensures \result == num1 + num2; // mutated % with +
    //@ ensures \result == -1;
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 / num2;
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 + num2;  
 
    //@ ensures \result == num1 / num2;  
    //@ ensures \result == num1 + num2; // mutated % with +
    //@ ensures \result == -1;
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:6:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:6: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 / num2;  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 + num2;  
 
 
    //@ ensures \result == num1 + num2; // mutated % with +
    //@ ensures \result == -1;
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:8:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:8: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == -1;
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 + num2;  
 
 
    //@ ensures \result == num1 + num2; // mutated % with +
    //@ ensures \result == -1;  
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:8:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:8: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == -1;  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;
    //@ ensures \result == num1 + num2;  
 
 
    //@ ensures \result == num1 + num2; // mutated % with +
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:3:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 + num2;
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 + num2;  
    //@ ensures \result == num1 + num2;  
 
 
    //@ ensures \result == num1 + num2; // mutated % with +
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:3:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 + num2;  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
    //@ ensures \result == num1 - num2;  
    //@ ensures \result == num1 + num2;  
 
 
    //@ ensures \result == num1 + num2; // mutated % with +
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:3:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:3: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 - num2;  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
 
    //@ ensures \result == num1 + num2;  
 
 
    //@ ensures \result == num1 + num2; // mutated % with +
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:4:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:4: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 + num2;  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
 
 
 
 
    //@ ensures \result == num1 + num2; // mutated % with +
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 + num2; // mutated % with +
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
 
 
 
 
    //@ ensures \result == num1 + num2; // mutated % with +  
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 + num2; // mutated % with +  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
 
 
 
 
    //@ ensures \result == num1 + num2; // mutated % with -  
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 + num2; // mutated % with -  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
 
 
 
 
    //@ ensures \result == num1 - num2; // mutated % with +  
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 - num2; // mutated % with +  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
 
 
 
 
    //@ ensures \result == num1 - num2; // mutated % with -  
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30: verify: The prover cannot establish an assertion (Postcondition: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7:) in method calculate
        return output;
        ^
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:7: verify: Associated declaration: /root/specgen/SpecGen/project/082601-gpt-specgen/tmp/Calculator_Mutant5.java:30:
    //@ ensures \result == num1 - num2; // mutated % with -  
        ^
2 verification failures

==============================
public class Calculator_Mutant5 {
    //@ requires num2 != 0;
 
 
 
 
 
 
    public static int calculate(int num1, int num2, char operator) {
        int output;
        switch(operator) {
            case '+':
                output = num1 + num2;
                break;
            case '-':
                output = num1 - num2;
                break;
            case '*':
                output = num1 * num2;
                break;
            case '/':
                output = num1 / num2;
                break;
            case '%':
                output = num1 + num2; //mutated % with +
                break;
            default:
                return -1;
        }
        return output;
    }
}

==============================

==============================
