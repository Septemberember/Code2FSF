public class PowerOfTwoBranch_Mutant2 {
    //@ ensures \result ==> n > 0 && (\exists int i; 0 <= i; n == 2^i);
    //@ ensures !\result ==> n <= 0 || (\exists int i; 0 <= i; n != 2^i);
    public static boolean isPowerOfTwo(int n) {
        if (n <= 0) {
            return false;
        }
        if ((n & (n - 1)) == 0) {
            return false;
        }
        return true;
    }
}
==============================
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/PowerOfTwoBranch_Mutant2.java:2: error: bad operand types for binary operator '^'
    //@ ensures \result ==> n > 0 && (\exists int i; 0 <= i; n == 2^i);
                                                                   ^
  first type:  boolean
  second type: int
/root/specgen/SpecGen/project/082601-gpt-specgen/tmp/PowerOfTwoBranch_Mutant2.java:3: error: bad operand types for binary operator '^'
    //@ ensures !\result ==> n <= 0 || (\exists int i; 0 <= i; n != 2^i);
                                                                     ^
  first type:  boolean
  second type: int
2 errors

==============================
public class PowerOfTwoBranch_Mutant2 {
    //@ ensures \result ==> n > 0 && (\exists int i; 0 <= i; n == (int)Math.pow(2, i));
    //@ ensures !\result ==> n <= 0 || (\exists int i; 0 <= i; n != (int)Math.pow(2, i));
    public static boolean isPowerOfTwo(int n) {
        if (n <= 0) {
            return false;
        }
        if ((n & (n - 1)) == 0) {
            return false;
        }
        return true;
    }
}
==============================
error: An error while executing a proof script for isPowerOfTwo: (error "expecting bit-vector terms")
1 error

==============================
public class PowerOfTwoBranch_Mutant2 {
    //@ ensures \result ==> n > 0 && (\exists int i; 0 <= i; n == (int)Math.pow(2, i));
    //@ ensures !\result ==> n <= 0 || (\exists int i; 0 <= i; n != (int)Math.pow(2, i));
    public static boolean isPowerOfTwo(int n) {
        if (n <= 0) {
            return false;
        }
        if ((n & (n - 1)) == 0) {
            return true;
        }
        return false;
    }
}
==============================
error: An error while executing a proof script for isPowerOfTwo: (error "expecting bit-vector terms")
1 error

==============================
public class PowerOfTwoBranch_Mutant2 {
    //@ ensures \result ==> n > 0 && (\exists int i; 0 <= i; n == (int)Math.pow(2, i));
    //@ ensures !\result ==> n <= 0 || (\exists int i; 0 <= i; n != (int)Math.pow(2, i));
    public static boolean isPowerOfTwo(int n) {
        if (n <= 0) {
            return false;
        }
        if ((n & (n - 1)) == 0) {
            return true;
        }
        return false;
    }
}
==============================
error: An error while executing a proof script for isPowerOfTwo: (error "expecting bit-vector terms")
1 error

==============================
public class PowerOfTwoBranch_Mutant2 {
    //@ ensures \result <==> n > 0 && (n & (n - 1)) == 0;
    public static boolean isPowerOfTwo(int n) {
        if (n <= 0) {
            return false;
        }
        if ((n & (n - 1)) == 0) {
            return true;
        }
        return false;
    }
}
==============================

==============================
