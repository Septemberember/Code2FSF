START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))) || ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D1: alarm == 0
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))) || ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D1: alarm == 0
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))) || ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D1: alarm == 0
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)) || (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)))
D1: alarm == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))) || ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D1: alarm == 0
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)) || (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)))
D1: alarm == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)) || (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)))
D1: alarm == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))) || ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D1: alarm == 0
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))) || ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D1: alarm == 0
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)) || (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)))
D1: alarm == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)) || (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)))
D1: alarm == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class GyroHealthCheck_Original {
    public static int gyroHealthCheck(int x, int y, int z) {
        int diffXY = x - y;
        if (diffXY < 0) diffXY = -diffXY;
        int diffYZ = y - z;
        if (diffYZ < 0) diffYZ = -diffYZ;
        int diffXZ = x - z;
        if (diffXZ < 0) diffXZ = -diffXZ;
        int alarm = 0;
        if (diffXY > 10 || diffYZ > 10 || diffXZ > 10) {
            alarm = 1;
        }
        return alarm;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: (x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)
D1: alarm == 1
T2: !((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10))
D2: alarm == 0
*END* ORIGINAL FSF
START MODIFIED FSF
T1: ((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)) || (!((x - y > 10 || y - x > 10) || (y - z > 10 || z - y > 10) || (x - z > 10 || z - x > 10)))
D1: alarm == 1
*END* MODIFIED FSF
