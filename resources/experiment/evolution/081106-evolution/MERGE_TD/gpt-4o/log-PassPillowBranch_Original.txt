start role user
Please modify the following code according to the modified FSF:
```Code


public class PassPillowBranch_Original {

    public static int passPillow(int n, int time) {
        if(n - 1 < 0){
            throw new IllegalArgumentException("n is less than 1");
        }
        time = time % ((n - 1) * 2);
        if (time < n) {
            return time + 1;
        }
        return n * 2 - time - 1;
    }
}

```
```Original FSF
T0: n - 1 < 0
D0: Exception

T1: n - 1 >= 0 && time % ((n - 1) * 2) < n
D1: return_value == time % ((n - 1) * 2) + 1

T2: n - 1 >= 0 && time % ((n - 1) * 2) >= n
D2: return_value == n * 2 - (time % ((n - 1) * 2)) - 1

```Modified FSF
T0: (n - 1 < 0) || (n - 1 >= 0 && time % ((n - 1) * 2) < n)
D0: Exception

T1: n - 1 >= 0 && time % ((n - 1) * 2) >= n
D1: return_value == n * 2 - (time % ((n - 1) * 2)) - 1

```


*end* role user
start role assistant
```
public class PassPillowBranch_Modified {

    public static int passPillow(int n, int time) {
        if((n - 1 < 0) || (n - 1 >= 0 && time % ((n - 1) * 2) < n)){
            throw new IllegalArgumentException("Invalid input");
        }
        return n * 2 - (time % ((n - 1) * 2)) - 1;
    }
}
```

The modified code:
1. Combines the original T0 and T1 conditions into a single exception case as specified in the modified FSF
2. Only keeps the return logic from the original T2 case (now T1 in modified FSF)
3. Simplifies the structure to match the modified requirements while maintaining the same functionality for valid cases
4. Preserves the same parameter types and method signature
5. Uses a more generic exception message since it now covers multiple invalid cases
*end* role assistant
start role remark
Validation SUCCESS!
*end* role remark
