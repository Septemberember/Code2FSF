start role user
Please modify the following code according to the modified FSF:
```Code


public class LeapYear_Original {

    public static boolean isLeapYear(int year) {
        boolean leap = false;
        if (year % 4 == 0) {
            if (year % 100 == 0) {
                if (year % 400 == 0)
                    leap = true;
                else
                    leap = false;
            } else
                leap = true;
        } else
            leap = false;
        return leap;
    }
}

```
```Original FSF
T0: year % 400 == 0
D0: leap == true

T1: year % 100 == 0 && year % 400 != 0
D1: leap == false

T2: year % 4 == 0 && year % 100 != 0
D2: leap == true

T3: year % 4 != 0
D3: leap == false

```Modified FSF
T0: (year % 400 == 0) || (year % 100 == 0 && year % 400 != 0)
D0: leap == true

T1: year % 4 == 0 && year % 100 != 0
D1: leap == true

T2: year % 4 != 0
D2: leap == false

```


*end* role user
start role assistant
```
public class LeapYear_Modified {

    public static boolean isLeapYear(int year) {
        boolean leap = false;
        if ((year % 400 == 0) || (year % 100 == 0 && year % 400 != 0)) {
            leap = true;
        } else if (year % 4 == 0 && year % 100 != 0) {
            leap = true;
        } else {
            leap = false;
        }
        return leap;
    }
}
```

The modified code now implements the new FSF requirements where:
1. Any year divisible by 400 OR divisible by 100 but not by 400 is considered a leap year (T0)
2. Years divisible by 4 but not by 100 are leap years (T1)
3. All other years are not leap years (T2)

The original nested if-else structure has been simplified to directly match the modified FSF conditions while maintaining the same functionality. The code is more straightforward now as it checks the combined conditions first before checking the individual cases.
*end* role assistant
start role remark
Validation SUCCESS!
*end* role remark
