start role user
Please modify the following code according to the modified FSF:
```Code


public class DigitRoot_Original {

    public static int function(int num) {
        while (num >= 10) {
            int sum = 0;
            while (num > 0) {
                sum = sum + (num % 10);
                num = num / 10;
            }
            num = sum;
        }
        return num;
    }
}

```
```Original FSF
T0: num < 10
D0: return_value == num

T1: num >= 10
D1: return_value == num % 9 || return_value == 9

```Modified FSF
T0: (num >= 10) || (num < 10)
D0: return_value == num % 9 || return_value == 9

```


*end* role user
start role assistant
```
public class DigitRoot_Modified {

    public static int function(int num) {
        if (num == 0) return 0;
        int result = num % 9;
        return result == 0 ? 9 : result;
    }
}
```

The modified code:
1. Removes the loop-based digit sum calculation
2. Implements the direct mathematical solution for digital root (num % 9, with special case for 0)
3. Satisfies the modified FSF which requires the same behavior (num % 9 or 9) for all inputs regardless of their size
4. Maintains the same functionality but with better performance
5. Handles the edge case of 0 explicitly (which returns 0)
*end* role assistant
start role remark
Validation SUCCESS!
*end* role remark
