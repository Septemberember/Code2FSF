START ORIGINAL CODE

public class MySqrt_Original {

    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: x == 0
D1: return_value == 0
T2: x > 0
D2: return_value ** 2 <= x && (return_value + 1) ** 2 > x
T3: x < 0
D3: return_value == -1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (x == 0) || (x < 0)
D1: return_value == 0
T2: x > 0
D2: return_value ** 2 <= x && (return_value + 1) ** 2 > x
*END* MODIFIED FSF
START ORIGINAL CODE

public class MySqrt_Original {

    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: x == 0
D1: return_value == 0
T2: x > 0
D2: return_value ** 2 <= x && (return_value + 1) ** 2 > x
T3: x < 0
D3: return_value == -1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (x > 0) || (x == 0)
D1: return_value ** 2 <= x && (return_value + 1) ** 2 > x
T2: x < 0
D2: return_value == -1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MySqrt_Original {

    public static int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long) mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: x == 0
D1: return_value == 0
T2: x > 0
D2: return_value ** 2 <= x && (return_value + 1) ** 2 > x
T3: x < 0
D3: return_value == -1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (x > 0) || (x == 0)
D1: return_value ** 2 <= x && (return_value + 1) ** 2 > x
T2: x < 0
D2: return_value == -1
*END* MODIFIED FSF
