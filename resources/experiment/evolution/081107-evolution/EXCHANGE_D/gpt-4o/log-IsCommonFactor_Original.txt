start role user
Please modify the following code according to the modified FSF:
```Code


public class IsCommonFactor_Original {

    public static boolean isCommonFactor(int a, int b, int factor) {
        return a % factor == 0 && b % factor == 0;
    }
}

```
```Original FSF
T0: factor == 0
D0: Exception

T1: factor != 0 && a % factor == 0 && b % factor == 0
D1: return_value == true

T2: factor != 0 && (a % factor != 0 || b % factor != 0)
D2: return_value == false

```Modified FSF
T0: factor == 0
D0: return_value == true

T1: factor != 0 && a % factor == 0 && b % factor == 0
D1: Exception

T2: factor != 0 && (a % factor != 0 || b % factor != 0)
D2: return_value == false

```


*end* role user
start role assistant
```
public class IsCommonFactor_Modified {

    public static boolean isCommonFactor(int a, int b, int factor) {
        if (factor == 0) {
            return true;
        } else if (a % factor == 0 && b % factor == 0) {
            throw new ArithmeticException("Common factor found");
        } else {
            return false;
        }
    }
}
```

The modified code:
1. Returns true when factor is 0 (T0)
2. Throws an exception when factor is non-zero and divides both a and b (T1)
3. Returns false when factor is non-zero but doesn't divide either a or b (T2)

The changes maintain the same structure as the original code while implementing the new behavior specified in the modified FSF. The exception is thrown using Java's built-in ArithmeticException, which is appropriate for division/modulo related errors.
*end* role assistant
start role remark
Validation SUCCESS!
*end* role remark
