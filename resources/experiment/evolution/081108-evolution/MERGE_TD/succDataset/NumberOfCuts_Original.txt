START ORIGINAL CODE

public class NumberOfCuts_Original {

    public static int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return n;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 1
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
T3: n % 2 != 0 && n != 1
D3: return_value == n
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n % 2 == 0 && n != 1) || (n == 1)
D1: return_value == n / 2
T2: n % 2 != 0 && n != 1
D2: return_value == n
*END* MODIFIED FSF
START ORIGINAL CODE

public class NumberOfCuts_Original {

    public static int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return n;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 1
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
T3: n % 2 != 0 && n != 1
D3: return_value == n
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n % 2 == 0 && n != 1) || (n == 1)
D1: return_value == n / 2
T2: n % 2 != 0 && n != 1
D2: return_value == n
*END* MODIFIED FSF
START ORIGINAL CODE

public class NumberOfCuts_Original {

    public static int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return n;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 1
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
T3: n % 2 != 0 && n != 1
D3: return_value == n
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n == 1) || (n % 2 == 0 && n != 1)
D1: return_value == 0
T2: n % 2 != 0 && n != 1
D2: return_value == n
*END* MODIFIED FSF
START ORIGINAL CODE

public class NumberOfCuts_Original {

    public static int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return n;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 1
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
T3: n % 2 != 0 && n != 1
D3: return_value == n
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n % 2 == 0 && n != 1) || (n == 1)
D1: return_value == n / 2
T2: n % 2 != 0 && n != 1
D2: return_value == n
*END* MODIFIED FSF
START ORIGINAL CODE

public class NumberOfCuts_Original {

    public static int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return n;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 1
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
T3: n % 2 != 0 && n != 1
D3: return_value == n
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n == 1) || (n % 2 != 0 && n != 1)
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
*END* MODIFIED FSF
START ORIGINAL CODE

public class NumberOfCuts_Original {

    public static int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return n;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 1
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
T3: n % 2 != 0 && n != 1
D3: return_value == n
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n == 1) || (n % 2 == 0 && n != 1)
D1: return_value == 0
T2: n % 2 != 0 && n != 1
D2: return_value == n
*END* MODIFIED FSF
START ORIGINAL CODE

public class NumberOfCuts_Original {

    public static int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return n;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 1
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
T3: n % 2 != 0 && n != 1
D3: return_value == n
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n == 1) || (n % 2 != 0 && n != 1)
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
*END* MODIFIED FSF
START ORIGINAL CODE

public class NumberOfCuts_Original {

    public static int numberOfCuts(int n) {
        if (n == 1) {
            return 0;
        }
        if (n % 2 == 0) {
            return n / 2;
        }
        return n;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 1
D1: return_value == 0
T2: n % 2 == 0 && n != 1
D2: return_value == n / 2
T3: n % 2 != 0 && n != 1
D3: return_value == n
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n % 2 == 0 && n != 1
D1: return_value == n / 2
T2: (n % 2 != 0 && n != 1) || (n == 1)
D2: return_value == n
*END* MODIFIED FSF
