start role user
Please modify the following code according to the modified FSF:
```Code


public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

```
```Original FSF
T0: n == 0
D0: return_value == 1

T1: n > 0
D1: return_value == x ** n

T2: n < 0
D2: return_value == 1

```Modified FSF
T0: (n == 0) || (n < 0)
D0: return_value == 1

T1: n > 0
D1: return_value == x ** n

```


*end* role user
start role assistant
```
public class MyPower_Modified {
    public static int power(int x, int n) {
        int res = 1;
        if (n > 0) {
            for(int i = 0; i < n; i++){
                res = res * x;
            }
        }
        return res;
    }
}
```

The modification:
1. Removed the redundant check for n < 0 since the modified FSF combines T0 and T2 (n == 0 or n < 0) into a single case that returns 1
2. Kept the original behavior for n > 0 (T1)
3. The default case (when n <= 0) will return 1 without any computation
4. Maintained the same structure and style as the original code while implementing the new requirements

The modified code satisfies:
- For n > 0: returns x^n (same as original)
- For n <= 0: always returns 1 (combining both n==0 and n<0 cases)
*end* role assistant
start role remark
Validation SUCCESS!
*end* role remark
