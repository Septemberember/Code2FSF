start role user
Please modify the following code according to the modified FSF:
```Code


public class PassPillowBranch_Original {

    public static int passPillow(int n, int time) {
        if(n - 1 < 0){
            throw new IllegalArgumentException("n is less than 1");
        }
        time = time % ((n - 1) * 2);
        if (time < n) {
            return time + 1;
        }
        return n * 2 - time - 1;
    }
}

```
```Original FSF
T0: n - 1 < 0
D0: Exception

T1: n - 1 >= 0 && time % ((n - 1) * 2) < n
D1: return_value == time % ((n - 1) * 2) + 1

T2: n - 1 >= 0 && time % ((n - 1) * 2) >= n
D2: return_value == n * 2 - (time % ((n - 1) * 2)) - 1

```Modified FSF
T0: n - 1 < 0
D0: Exception

T1: n - 1 >= 0 && time % ((n - 1) * 2) < n
D1: return_value == n * 2 - (time % ((n - 1) * 2)) - 1

T2: n - 1 >= 0 && time % ((n - 1) * 2) >= n
D2: return_value == time % ((n - 1) * 2) + 1

```


*end* role user
start role assistant
```
public class PassPillowBranch_Modified {

    public static int passPillow(int n, int time) {
        if(n - 1 < 0){
            throw new IllegalArgumentException("n is less than 1");
        }
        time = time % ((n - 1) * 2);
        if (time < n) {
            return n * 2 - time - 1;
        }
        return time + 1;
    }
}
```

The modification simply swaps the return values in the two branches of the if-statement to match the modified FSF requirements:
1. When time < n, we now return `n * 2 - time - 1` (D1)
2. Otherwise, we return `time + 1` (D2)
3. The exception case for invalid input (n < 1) remains unchanged (D0)

The structure and logic of the code remains the same, we just changed which value gets returned in each case to match the modified specifications.
*end* role assistant
start role remark
Validation SUCCESS!
*end* role remark
