START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n == 0) || (n < 0)
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n == 0
D1: return_value == 1
T2: (n < 0) || (n > 0)
D2: return_value == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n == 0
D1: return_value == 1
T2: (n < 0) || (n > 0)
D2: return_value == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n > 0
D1: return_value == x ** n
T2: (n < 0) || (n == 0)
D2: return_value == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n == 0
D1: return_value == 1
T2: (n < 0) || (n > 0)
D2: return_value == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n == 0
D1: return_value == 1
T2: (n < 0) || (n > 0)
D2: return_value == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n > 0
D1: return_value == x ** n
T2: (n < 0) || (n == 0)
D2: return_value == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n == 0
D1: return_value == 1
T2: (n < 0) || (n > 0)
D2: return_value == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n == 0
D1: return_value == 1
T2: (n > 0) || (n < 0)
D2: return_value == x ** n
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n > 0) || (n == 0)
D1: return_value == x ** n
T2: n < 0
D2: return_value == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: n > 0
D1: return_value == x ** n
T2: (n < 0) || (n == 0)
D2: return_value == 1
*END* MODIFIED FSF
START ORIGINAL CODE

public class MyPower_Original {
    public static int power(int x, int n) {
        int res = 1;
        for(int i = 0; i < n; i++){
	        res = res * x;
        }
        return res;
    }
}

*END* ORIGINAL CODE
START ORIGINAL FSF
T1: n == 0
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
T3: n < 0
D3: return_value == 1
*END* ORIGINAL FSF
START MODIFIED FSF
T1: (n == 0) || (n < 0)
D1: return_value == 1
T2: n > 0
D2: return_value == x ** n
*END* MODIFIED FSF
